-- Copyright James Cook

-- make this work faster and easier to program


-- include std/graphics.e

--with trace

include ../eunumber/my.e

defaultRadix = 10

trace(1)

sequence a, b, c, d, mypi

puts(1, "Example: sqrt(PI)\n")

mypi = GetPI()

puts(1, ToString(mypi) & "\n")

trace(1)

a = EunSqrt(mypi)
a = a[2]

? a

puts(1, ToString(a) & "\n")

----

puts(1, "Again, this time using: 4 * arctan(1); 10 decimal places\n")

defaultRadix = 10
defaultTargetLength = 10

trace(1)
a = ToEun(1)
b = ToEun(4)
a = EunArcTan(a)

mypi = EunMultiply(a, b)

a = EunSqrt(mypi)
a = a[2]

? mypi
puts(1, ToString(mypi) & "\n")

? a
puts(1, ToString(a) & "\n")

----

puts(1, "Again, this time using: 1000 decimal places (constant for pi)\n")

-- puts(1, "wait for it\n")

defaultRadix = 10
defaultTargetLength = 1001
calculationSpeed = defaultTargetLength -- doesn't need more accuracy for this equation

mypi = ToEun(
"3.14159265358979323846264338327950288419716939937510582097494459230781640628" &
"620899862803482534211706798214808651328230664709384460955058223172535940812" &
"848111745028410270193852110555964462294895493038196442881097566593344612847" &
"564823378678316527120190914564856692346034861045432664821339360726024914127" &
"372458700660631558817488152092096282925409171536436789259036001133053054882" &
"046652138414695194151160943305727036575959195309218611738193261179310511854" &
"807446237996274956735188575272489122793818301194912983367336244065664308602" &
"139494639522473719070217986094370277053921717629317675238467481846766940513" &
"200056812714526356082778577134275778960917363717872146844090122495343014654" &
"958537105079227968925892354201995611212902196086403441815981362977477130996" &
"051870721134999999837297804995105973173281609631859502445945534690830264252" &
"230825334468503526193118817101000313783875288658753320838142061717766914730" &
"359825349042875546873115956286388235378759375195778185778053217122680661300" &
"19278766111959092164201989"
)

a = EunSqrt(mypi)
a = a[2]

-- ? a
-- ? length(mypi[1])

puts(1, ToString(a) & "\n")

printf(1, "Length is: %d\n", {length(a[1])})

-- answer:
b = ToEun(
"1.772453850905516027298167483341145182797549456122387128213807789852911284591032" &
"18137495065673854466541622682362428257066623615286572442260252509370960278706846" &
"20376986531051228499251730289508262289320953792679628001746390153514797205167001" &
"90185234018585446974494912640313921775525906216405419332500906398407613733477475" &
"15343366798978936585183640879545116516173876005906739343179133280985484624818490" &
"20546548521956132515616474675150427387610561079961271072100603720444836723652966" &
"13708094323498831668424213845709609120420427785778068694766570005218305685125413" &
"39663694465418151071669388332194292935706226886522442054214994804992075648639887" &
"48385059306402182140292858112330649789452036211490789622873894032459781985131348" &
"71266512506293260044656382109675026812496930595420461560761952217391525070207792" &
"75809905433290066222306761446966124818874306997883520506146444385418530797357425" &
"71791856359597499599522638492422038891039664064472939728413450430021405642334330" &
"392617561341763363200170376541634763206693"
)

puts(1, "Comparing generated answer (A) with stored result (B):\n")
if EunCompare(a, b) then
    puts(1, "Warning: A and B are not equal.\n")
else
    puts(1, "Success: A and B are equal.\n")
end if

puts(1, "Press Enter to exit.\n")
getc(0)

